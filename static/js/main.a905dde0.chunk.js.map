{"version":3,"sources":["Components/Header/header.js","utils/context.js","Components/Body/Task/TaskItem.js","Components/Body/Task/TaskList.js","Components/Body/body.js","App.js","index.js"],"names":["Header","className","type","placeholder","href","React","createContext","TaskItem","list","task","index","useContext","Context","updateInputEdit","toggleEdit","inputTaskRef","useRef","enter","e","key","handleEditTask","handleInputChange","target","value","trim","current","style","border","id","content","focus","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","onDoubleClick","edit","onChange","onKeyPress","onBlur","autoFocus","TaskList","addTask","deleteList","useState","inputAddTask","setInputAddTask","inputAddTaskRef","handleAddTask","preventDefault","alert","handleDeleteList","title","onClick","droppableId","droppableProps","tasks","map","onSubmit","disabled","Body","TRELLO_STORAGE_KEY","datas","dataIds","lists","setLists","inputAddList","setinputAddList","inputAddListRef","useEffect","storagedTrello","localStorage","getItem","JSON","parse","setItem","stringify","nameTask","listId","newTask","v4","window","confirm","newDataIds","filter","dataId","removeList","Provider","taskId","taskContent","newListId","newList","onDragEnd","result","destination","splice","source","reorderedItem","sourceList","destinationList","draggingTask","direction","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a905dde0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className='header'>\r\n            <ul className='header__list'>\r\n                <li className='list__item'>\r\n                    <i className=\"fa fa-bars\" />\r\n                </li>\r\n                <li className='list__item'>\r\n                    <i className=\"fa fa-home\"></i>\r\n                </li>\r\n                <li className='list__item'>\r\n                    <i className=\"fa fa-table\"></i>\r\n                    Bảng\r\n                </li>\r\n                <li className='list__item'>\r\n                    <input type='text' placeholder='Chuyển đến...' />\r\n                    <i className=\"fa fa-search\"></i>\r\n                </li>\r\n            </ul>\r\n            <div className='header__logo'>\r\n                <a href='#'>Trello</a>\r\n            </div>\r\n            <ul className='header__list'>\r\n                <li className='list__item'>\r\n                    <i className=\"fa fa-plus\"></i>\r\n                </li>\r\n                <li className='list__item'>\r\n                    <i className=\"fa fa-info-circle\"></i>\r\n                </li>\r\n                <li className='list__item'>\r\n                    <i className=\"fa fa-bell\"></i>\r\n                </li>\r\n                <li className='list__item'>\r\n                    <div className='item__profile'>T</div>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nexport default React.createContext(null)","import React, { useContext, useRef } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport './task.css';\r\nimport Context from 'utils/context';\r\n\r\n\r\nfunction TaskItem({ list, task, index }) {\r\n    const { updateInputEdit, toggleEdit } = useContext(Context);\r\n    const inputTaskRef = useRef(null);\r\n\r\n    const enter = (e) => {\r\n        if (e.key === 'Enter') return handleEditTask();\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        if (e.target.value.trim() !== '') {\r\n            inputTaskRef.current.style.border = '2px solid #0079bf';\r\n        }\r\n        else inputTaskRef.current.style.border = '2px solid red';\r\n        updateInputEdit(e.target.value, task.id, list.id)\r\n    }\r\n\r\n    const handleEditTask = () => {\r\n        if (task.content.trim() !== '') {\r\n            toggleEdit(list.id, task.id, task.content)\r\n        }\r\n        else {\r\n            inputTaskRef.current.focus();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Draggable draggableId={task.id} index={index}>\r\n            {provided => (\r\n                <li\r\n                    className='item'\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    onDoubleClick={handleEditTask}>\r\n                    {\r\n                        task.edit\r\n                            ? <input\r\n                                className='input__edit-task'\r\n                                ref={inputTaskRef}\r\n                                value={task.content}\r\n                                onChange={handleInputChange}\r\n                                onKeyPress={enter}\r\n                                onBlur={handleEditTask}\r\n                                autoFocus\r\n                            />\r\n                            : <>{task.content}</>\r\n                    }\r\n                </li>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default TaskItem","import React, { useRef, useState } from 'react';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport './task.css';\r\nimport TaskItem from './TaskItem';\r\n\r\nfunction TaskList({ list, index, addTask, deleteList }) {\r\n    const [inputAddTask, setInputAddTask] = useState('');\r\n    const inputAddTaskRef = useRef(null);\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputAddTask(e.target.value);\r\n    }\r\n\r\n    const handleAddTask = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newInputAddTask = inputAddTask.trim();\r\n        if (newInputAddTask !== '') {\r\n            addTask(inputAddTask.trim(), list.id);\r\n            setInputAddTask('');\r\n        }\r\n        else {\r\n            alert('Tiêu đề phải chứa kí tự!');\r\n            setInputAddTask('');\r\n            inputAddTaskRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleDeleteList = () => {\r\n        deleteList(list.id);\r\n    }\r\n\r\n    return (\r\n        <Draggable draggableId={list.id} index={index}>\r\n            {provided => (\r\n                <div className='list' ref={provided.innerRef} {...provided.draggableProps}>\r\n                    <div className='list__heading' {...provided.dragHandleProps}>\r\n                        <h3 {...provided.dragHandleProps}>{list.title}</h3>\r\n                        <i className='fa fa-trash' onClick={handleDeleteList} />\r\n                    </div>\r\n                    <Droppable droppableId={list.id}>\r\n                        {provided => (\r\n                            <ul className='item__wrap' {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {list.tasks.map((task, index) => {\r\n                                    return (\r\n                                        <TaskItem\r\n                                            key={task.id}\r\n                                            task={task}\r\n                                            list={list}\r\n                                            index={index}\r\n                                        />\r\n                                    )\r\n                                })\r\n                                }\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n                    </Droppable>\r\n                    <form className='add__item' onSubmit={handleAddTask}>\r\n                        <input\r\n                            className='add__item--input'\r\n                            ref={inputAddTaskRef}\r\n                            value={inputAddTask}\r\n                            onChange={handleInputChange}\r\n                            type='text'\r\n                            placeholder='Thêm tiêu đề...'\r\n                        />\r\n                        <button className='add__item--btn' type='submit' disabled={!inputAddTask}>\r\n                            <i className=\"fa fa-plus\"></i>\r\n                            Thêm thẻ\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n\r\n\r\nexport default TaskList","import React, { useEffect, useRef, useState } from 'react';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport './body.css';\r\nimport { v4 } from 'uuid';\r\nimport TaskList from './Task/TaskList';\r\n\r\nimport Context from 'utils/context';\r\n\r\n\r\nfunction Body() {\r\n    const TRELLO_STORAGE_KEY = 'TRELLO_APP';\r\n\r\n    const [lists, setLists] = useState({ datas: {}, dataIds: [] });\r\n    const [inputAddList, setinputAddList] = useState('');\r\n    const inputAddListRef = useRef(null);\r\n\r\n    // const API = 'http://localhost:3000/trello'\r\n\r\n    // useEffect(() => {\r\n    //     fetch(API)\r\n    //         .then(res => res.json())\r\n    //         .then(data => {\r\n    //             setLists(data)\r\n    //         })\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        const storagedTrello = localStorage.getItem(TRELLO_STORAGE_KEY);\r\n        if (storagedTrello) {\r\n            setLists(JSON.parse(storagedTrello))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(TRELLO_STORAGE_KEY, JSON.stringify(lists))\r\n    }, [lists])\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputAddList(e.target.value)\r\n    }\r\n\r\n    const addList = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newInputAddList = inputAddList.trim();\r\n        if (newInputAddList !== '') {\r\n            const newListId = v4();\r\n            const newList = {\r\n                id: newListId,\r\n                title: inputAddList,\r\n                tasks: []\r\n            }\r\n\r\n            setLists({\r\n                datas: {\r\n                    ...lists.datas,\r\n                    [newListId]: newList\r\n                },\r\n                dataIds: [...lists.dataIds, newListId]\r\n            })\r\n\r\n            setinputAddList('');\r\n            inputAddListRef.current.focus();\r\n        }\r\n        else {\r\n            alert('Danh sách phải chứa kí tự!');\r\n            setinputAddList('');\r\n            inputAddListRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const addTask = (nameTask, listId) => {\r\n        const newTask = { id: v4(), content: nameTask, edit: false }\r\n        const list = lists.datas[listId];\r\n\r\n        list.tasks = [...list.tasks, newTask];\r\n\r\n        setLists({\r\n            ...lists,\r\n            datas: { ...lists.datas, [list.id]: list }\r\n        })\r\n    }\r\n\r\n    const toggleEdit = (listId, taskId, taskContent) => {\r\n        const list = lists.datas[listId];\r\n        list.tasks = list.tasks.map(task => {\r\n            if (task.id == taskId) return { id: taskId, content: taskContent, edit: !task.edit }\r\n            else return task\r\n        })\r\n\r\n        setLists({\r\n            ...lists,\r\n            datas: { ...lists.datas, [list.id]: list }\r\n        })\r\n    }\r\n\r\n    const updateInputEdit = (value, taskId, listId) => {\r\n        const list = lists.datas[listId];\r\n        list.tasks = list.tasks.map(task => {\r\n            if (task.id == taskId) return { id: taskId, content: value, edit: true }\r\n            else return task\r\n        })\r\n\r\n        setLists({\r\n            ...lists,\r\n            datas: { ...lists.datas, [list.id]: list }\r\n        })\r\n    }\r\n\r\n    const deleteList = (listId) => {\r\n        const list = lists.datas[listId];\r\n\r\n        const removeList = () => {\r\n            delete lists.datas[listId]\r\n            const newDataIds = lists.dataIds.filter(dataId => dataId !== listId);\r\n            setLists({\r\n                ...lists,\r\n                dataIds: newDataIds\r\n            })\r\n        }\r\n\r\n        if (window.confirm(`Chắc chắn xóa cột \"${list.title.trim()}\"?`)) {\r\n            removeList();\r\n        }\r\n        else return\r\n    }\r\n\r\n    function handleOnDragEnd(result) {\r\n        if (!result.destination) return;\r\n\r\n        if (result.type === 'LIST') {\r\n            const newList = lists;\r\n            const [reorderedItem] = newList.dataIds.splice(result.source.index, 1);\r\n            newList.dataIds.splice(result.destination.index, 0, reorderedItem);\r\n\r\n            setLists(newList);\r\n            return;\r\n        }\r\n\r\n        const sourceList = lists.datas[result.source.droppableId];\r\n        const destinationList = lists.datas[result.destination.droppableId];\r\n        const draggingTask = sourceList.tasks.filter(task => task.id === result.draggableId)[0]\r\n\r\n        if (result.source.droppableId == result.destination.droppableId) {\r\n            sourceList.tasks.splice(result.source.index, 1);\r\n            sourceList.tasks.splice(result.destination.index, 0, draggingTask);\r\n\r\n            setLists({\r\n                ...lists,\r\n                datas: { ...lists.datas, [sourceList.id]: destinationList }\r\n            })\r\n        }\r\n        else {\r\n            sourceList.tasks.splice(result.source.index, 1);\r\n            destinationList.tasks.splice(result.destination.index, 0, draggingTask);\r\n\r\n            setLists({\r\n                ...lists,\r\n                datas: { ...lists.datas, [destinationList.id]: destinationList }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{ updateInputEdit, toggleEdit }}>\r\n            <div className='body'>\r\n                <form className='add__list' onSubmit={addList}>\r\n                    <input\r\n                        className='add__list--input'\r\n                        ref={inputAddListRef}\r\n                        value={inputAddList}\r\n                        onChange={handleInputChange}\r\n                        type='text'\r\n                        placeholder='Thêm danh sách' />\r\n                    <button className='add__list--btn' type='submit' disabled={!inputAddList}>ADD</button>\r\n                </form>\r\n\r\n                <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId='LIST' type='LIST' direction=\"horizontal\">\r\n                        {provided => (\r\n                            <div className='content' {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {lists.dataIds.map((listId, index) => {\r\n                                    const list = lists.datas[listId];\r\n                                    return (\r\n                                        <TaskList\r\n                                            key={listId}\r\n                                            list={list}\r\n                                            index={index}\r\n                                            addTask={addTask}\r\n                                            deleteList={deleteList}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            </div>\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Body\r\n\r\n","import React from 'react';\nimport Header from './Components/Header/header';\nimport './App.css';\nimport Body from './Components/Body/body';\n\n\n\nfunction App() {\n\n  return (\n    <>\n      <Header />\n      <Body />\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}